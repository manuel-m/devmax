FROM debian:bookworm-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    NODE_VERSION=20.17.0 \
    JAVA_HOME=/usr/lib/jvm/temurin-11-jdk-amd64 \
    PATH=$JAVA_HOME/bin:$PATH \
    GOPATH="/home/$DEV_USERNAME/go" \
    GOBIN="/home/$DEV_USERNAME/go/bin" \
    PATH="/usr/local/go/bin:${PATH}"

# Install all packages in a single layer with cleanup
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Basic tools
    curl wget git ca-certificates gnupg sudo \
    # Development essentials
    build-essential python3 python3-pip \
    # SSH
    openssh-client openssh-server \
    # System utilities
    vim nano htop tree unzip zip tmux screen jq ripgrep \
    # Network tools
    netcat-openbsd nmap tcpdump iftop whois traceroute mtr iperf3 socat telnet ftp net-tools iproute2 dnsutils iputils-ping tshark \
    # Encoding tools
    xxd openssl gnupg \
    # Git tools
    git-lfs tig \
    # Java (All JDKs)
    && curl -fsSL https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor -o /usr/share/keyrings/adoptium.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/adoptium.gpg] https://packages.adoptium.net/artifactory/deb bookworm main" > /etc/apt/sources.list.d/adoptium.list \
    && apt-get update && apt-get install -y --no-install-recommends temurin-8-jdk temurin-11-jdk temurin-17-jdk \
    # JDK alternatives
    && update-alternatives --install /usr/bin/java java /usr/lib/jvm/temurin-8-jdk-amd64/bin/java 1080 \
    && update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/temurin-8-jdk-amd64/bin/javac 1080 \
    && update-alternatives --install /usr/bin/java java /usr/lib/jvm/temurin-11-jdk-amd64/bin/java 1110 \
    && update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/temurin-11-jdk-amd64/bin/javac 1110 \
    && update-alternatives --install /usr/bin/java java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java 1170 \
    && update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/temurin-17-jdk-amd64/bin/javac 1170 \
    && update-alternatives --set java /usr/lib/jvm/temurin-8-jdk-amd64/bin/java \
    && update-alternatives --set javac /usr/lib/jvm/temurin-8-jdk-amd64/bin/javac \
    # Node.js
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y --no-install-recommends nodejs \
    # Maven
    && apt-get install -y --no-install-recommends maven \
    # Go (smaller version)
    && wget -O /tmp/go.tar.gz https://golang.org/dl/go1.21.5.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf /tmp/go.tar.gz \
    && rm /tmp/go.tar.gz \
    # Comby
    && apt-get install -y --no-install-recommends libev4 libgmp10 libpcre3 \
    && curl -L https://github.com/comby-tools/comby/releases/download/1.8.1/comby-1.8.1-x86_64-linux.tar.gz -o /tmp/comby.tar.gz \
    && tar -xzf /tmp/comby.tar.gz -C /tmp \
    && mv /tmp/comby-1.8.1-x86_64-linux /usr/local/bin/comby \
    && chmod +x /usr/local/bin/comby \
    && rm -rf /tmp/comby* \
    # Python tools (minimal set)
    && pip3 install --break-system-packages --no-cache-dir pip setuptools wheel black pytest \
    # Node.js tools (essential only)
    && npm install -g --no-audit --no-fund npm@latest typescript prettier \
    # SSH config
    && mkdir /var/run/sshd \
    && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \
    # Cleanup
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && npm cache clean --force \
    && pip3 cache purge

# Create development user
ARG DEV_USERNAME=dev
ARG DEV_PASSWORD
ARG ROOT_PASSWORD

# Validate and create user
RUN if [ -z "$DEV_PASSWORD" ]; then \
        echo "ERROR: DEV_PASSWORD must be provided as build argument"; \
        exit 1; \
    fi \
    && if [ -n "$ROOT_PASSWORD" ]; then \
        echo "root:$ROOT_PASSWORD" | chpasswd; \
    fi \
    && useradd -m -s /bin/bash "$DEV_USERNAME" \
    && usermod -aG sudo "$DEV_USERNAME" \
    && echo "$DEV_USERNAME:$DEV_PASSWORD" | chpasswd \
    && echo "$DEV_USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers \
    && mkdir -p "/home/$DEV_USERNAME/.ssh" \
    && chmod 700 "/home/$DEV_USERNAME/.ssh" \
    && chown "$DEV_USERNAME:$DEV_USERNAME" "/home/$DEV_USERNAME/.ssh"

WORKDIR /workspace
RUN chown -R "$DEV_USERNAME:$DEV_USERNAME" /workspace

EXPOSE 3000 8080 22

CMD ["/usr/sbin/sshd", "-D"]